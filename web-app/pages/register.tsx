import Head from 'next/head'
import React, {useEffect, useCallback, useState} from "react";
import Link from "next/link";
import {ClipLoader} from "react-spinners";
import 'flowbite';
import HomeLayout from "@/components/layouts/Home";

export default function Register() {

    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [lastname, setLastname] = useState('');
    const [firstname, setFirstname] = useState('');
    const [confirmPassword, setConfirmPassword] = useState('');
    const [pseudo, setPseudo] = useState('');
    const [isLoading, setIsLoading] = useState(false);


    const [success, setSuccess] = useState("");
    const [error, setError] = useState("");

    useEffect(() => {
        document.body.classList.add("bg-custom-light-orange");

    }, []);

    const register = useCallback(async (e: any) => {

        e.preventDefault();

        if (password === confirmPassword) {

            setIsLoading(true);
            await fetch(`${process.env.NEXT_PUBLIC_CLIENT_API}/register`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    email: email,
                    password: password,
                    lastname: lastname,
                    firstname: firstname,
                    pseudo: pseudo
                })
            })
                .then(response => response.json())
                .then((data) => {
                    if (data.statusCode === 201) {
                        setSuccess("Votre compte a bien été créé. Vous allez recevoir un email pour le confirmer.")
                        setError("")
                    } else {
                        setError(data.response.message)
                        setSuccess("")
                    }
                    setIsLoading(false);
                }).catch((error) => {
                    console.log(error);
                    setIsLoading(false);
                });


        } else {
            setError("Mot de passe non identique.")
        }

    }, [email, password, confirmPassword, lastname, firstname, pseudo])


    return (
        <>
            <Head>
                <title>Ludotter</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <HomeLayout>
                <main>
                    <div className="grid mt-10 place-items-center">
                        <div
                            className="w-full max-w-xl p-4 bg-white border border-gray-200 rounded-lg shadow sm:p-6 md:p-7">

                            <div className="flex justify-center mb-5">
                                <img src="./otter.png" alt="logo" className="w-20 h-20"/>
                            </div>
                            <form className="space-y-6" onSubmit={register}>

                                {error && <div
                                    className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative"
                                    role="alert">
                                    <span className="block sm:inline"> {error}</span>
                                </div>}

                                {success && <div
                                    className="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative"
                                    role="alert">
                                    <span className="block sm:inline"> {success}</span>
                                </div>}
                                <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                                    <div>
                                        <label htmlFor="firstname"
                                               className="block mb-2 text-sm font-medium text-gray-900">Prénom</label>
                                        <input type="text" name="firstname" id="firstname"
                                               className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
                                               placeholder="Jean" required
                                               onChange={(e) => setFirstname(e.target.value)}/>
                                    </div>
                                    <div>
                                        <label htmlFor="name"
                                               className="block mb-2 text-sm font-medium text-gray-900">Nom</label>
                                        <input type="name" name="name" id="name" placeholder="Pierre" required
                                               onChange={(e) => setLastname(e.target.value)}
                                               className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
                                        />
                                    </div>
                                </div>

                                <div>
                                    <label htmlFor="email"
                                           className="block mb-2 text-sm font-medium text-gray-900">Pseudo</label>
                                    <input type="text"
                                           className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
                                           placeholder="Jean" required onChange={(e) => setPseudo(e.target.value)}/>
                                </div>

                                <div>
                                    <label htmlFor="email"
                                           className="block mb-2 text-sm font-medium text-gray-900">Email</label>
                                    <input type="email" name="email" id="email"
                                           className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
                                           placeholder="email@exemple.com" required
                                           onChange={(e) => setEmail(e.target.value)}/>
                                </div>
                                <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                                    <div>
                                        <label htmlFor="password"
                                               className="block mb-2 text-sm font-medium text-gray-900">Mot de
                                            passe</label>
                                        <input type="password" name="password" id="password"
                                               className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
                                               placeholder="******" onChange={(e) => setPassword(e.target.value)}/>
                                    </div>
                                    <div>
                                        <label htmlFor="confirmPassword"
                                               className="block mb-2 text-sm font-medium text-gray-900">Confirmation du
                                            mot de passe</label>
                                        <input type="password" name="confirmPassword" id="confirmPassword"
                                               placeholder="******"
                                               className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
                                               onChange={(e) => setConfirmPassword(e.target.value)}/>
                                    </div>


                                </div>
                                <button type="submit"
                                        className="w-full text-white bg-custom-orange hover:bg-custom-hover-orange focus:ring-4 focus:outline-none font-medium rounded-lg text-sm md:text-base px-5 py-2.5 text-center"> {isLoading ?
                                    <ClipLoader size={20} color={"#ffffff"}/> : "S'inscrire"}
                                </button>
                            </form>
                            <div className="text-sm font-medium text-gray-500 mt-10">
                                Vous avez déjà un compte ? <Link href="/login"
                                                                 className="text-custom-orange hover:underline">Se
                                connecter</Link>
                            </div>
                        </div>
                    </div>
                </main>
            </HomeLayout>
        </>
    )
}
